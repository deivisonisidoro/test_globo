[tool.poetry]
name = "test_globo_backend"
version = "0.1.0"
description = ""
authors = ["Deivison isidoro <deivisonisidoro@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
sqlalchemy = "^2.0.35"
alembic = "^1.13.3"
psycopg2-binary = "^2.9.9"
python-dotenv = "^1.0.1"
fastapi = {extras = ["standard"], version = "^0.115.0"}
mkdocs = "^1.6.1"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}
mkdocs-material = "^9.5.39"
mkdocs-awesome-pages-plugin = "^2.9.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
flake8 = "^7.1.1"
black = "^24.8.0"
pre-commit = "^3.8.0"
isort = "^5.13.2"
interrogate = "^1.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "integration: mark test as an integration test",
    "unit: mark test as an unit test",
    "e2e: mark test as an e2e test"
]

[tool.black]
line-length = 79
target-version = ['py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs         # exclude a directory named ".eggs"
  | \.git          # exclude the ".git" directory
  | \.hg           # exclude the ".hg" directory
  | \.mypy_cache   # exclude the ".mypy_cache" directory
  | \.tox          # exclude the ".tox" directory
  | \.venv         # exclude the ".venv" directory
  | _build         # exclude the "_build" directory
  | buck-out       # exclude the "buck-out" directory
  | build          # exclude the "build" directory
  | dist           # exclude the "dist" directory
)/
'''
[tool.isort]
profile = "black"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorator = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 95
exclude = ["setup.py", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 0
quiet = false
whitelist-regex = []
color = true
generate-badge = "."
badge-format = "svg"